#include <stdio.h>
#include <stdlib.h>
#include <string.h>

int R, C;

void copyGrid(char src[][201], char dest[][201]) {
    for (int i = 0; i < R; i++) {
        strcpy(dest[i], src[i]);
    }
}

void fillBombs(char grid[][201]) {
    for (int i = 0; i < R; i++) {
        for (int j = 0; j < C; j++) {
            grid[i][j] = 'O';
        }
        grid[i][C] = '\0';
    }
}

void explode(char before[][201], char after[][201]) {
    // Initially fill all bombs
    fillBombs(after);

    for (int i = 0; i < R; i++) {
        for (int j = 0; j < C; j++) {
            if (before[i][j] == 'O') {
                // Explode bomb: clear self and neighbors
                after[i][j] = '.';
                if (i - 1 >= 0) after[i-1][j] = '.';
                if (i + 1 < R) after[i+1][j] = '.';
                if (j - 1 >= 0) after[i][j-1] = '.';
                if (j + 1 < C) after[i][j+1] = '.';
            }
        }
    }
}

int main() {
    int n;
    scanf("%d %d %d", &R, &C, &n);
    
    char initial[201][201];
    for (int i = 0; i < R; i++) {
        scanf("%s", initial[i]);
    }

    if (n == 1) {
        // Print initial grid
        for (int i = 0; i < R; i++) {
            printf("%s\n", initial[i]);
        }
        return 0;
    }
    
    if (n % 2 == 0) {
        // Even seconds: full bombs
        for (int i = 0; i < R; i++) {
            for (int j = 0; j < C; j++) {
                printf("O");
            }
            printf("\n");
        }
        return 0;
    }

    // Odd n >= 3
    char grid_after_first_explosion[201][201];
    char grid_after_second_explosion[201][201];

    explode(initial, grid_after_first_explosion);
    explode(grid_after_first_explosion, grid_after_second_explosion);

    if (n % 4 == 3) {
        for (int i = 0; i < R; i++) {
            printf("%s\n", grid_after_first_explosion[i]);
        }
    } else { // n % 4 == 1 and n > 1
        for (int i = 0; i < R; i++) {
            printf("%s\n", grid_after_second_explosion[i]);
        }
    }

    return 0;
}

char* isBalanced(char* s) {
    int len = strlen(s);
    char *stack = malloc(len);
    int top = -1;

    for (int i = 0; i < len; i++) {
        char c = s[i];

        if (c == '(' || c == '{' || c == '[') {
            stack[++top] = c; // push
        } 
        else {
            // if stack is empty -> unbalanced
            if (top == -1) {
                free(stack);
                return "NO";
            }
            char topChar = stack[top--]; // pop
            if ((c == ')' && topChar != '(') ||
                (c == '}' && topChar != '{') ||
                (c == ']' && topChar != '[')) {
                free(stack);
                return "NO";
            }
        }
    }

    // If stack is empty after processing all brackets, it's balanced
    char* result;
    if (top == -1)
        result = "YES";
    else
        result = "NO";

    free(stack);
    return result;
}
